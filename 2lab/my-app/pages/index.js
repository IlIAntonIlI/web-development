import Head from "next/head";
import styles from "../styles/Home.module.css";
import Spiner from "../components/spiner/spiner";

export default function Home() {
  function prevent(e) {
    e.preventDefault();
    checkInfo();
  }

  function checkInfo() {
    const fisrtEmail = document.getElementById("SenderEmail").value;
    const secondEmail = document.getElementById("SendFor").value;
    const messuage = document.getElementById("Messuage").value;
    const button = document.getElementById("sendButton");
    button.disabled = true;
    if (
      validateEmail(fisrtEmail) &&
      validateEmail(secondEmail) &&
      messuage !== ""
    ) {
      document.getElementById("spiner").style.visibility = "visible";
      const bodyToSend = {
        from: fisrtEmail,
        where: secondEmail,
        letter: messuage,
      };

      fetch("/api/server", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(bodyToSend),
      })
        .then((resp) => {
          if (resp.ok) {
            alert("Mail sent!");
            document.location.reload();
          } else if (resp.status === 429) {
            alert("Too many requests");
            document.location.reload();
          } else {
            alert("Failed sending");
          }
        })
        .catch((e) => alert("Error"));
    } else {
      alert("Enter correct information and fill all fields of form");
      button.disabled = false;
    }
  }

  function checkValidation() {
    const fisrtEmail = document.activeElement.value;
    const errorElement = document.activeElement.nextSibling;
    if (fisrtEmail === "") {
      let child = errorElement.firstChild;
      if (child) {
        errorElement.removeChild(child);
      }
      let emailError = document.createTextNode("The field must not be empty!");
      errorElement.appendChild(emailError);
    } else {
      let child = errorElement.firstChild;
      if (child) {
        errorElement.removeChild(child);
      }
    }
    if (validateEmail(fisrtEmail)) {
      let child = errorElement.firstChild;
      if (child) {
        errorElement.removeChild(child);
      }
    } else {
      let child = errorElement.firstChild;
      if (!child) {
        let emailError = document.createTextNode(
          "The text you entered is not an email address!"
        );
        errorElement.appendChild(emailError);
      }
    }
  }

  function validateEmail(email) {
    const re =
      /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(email);
  }

  function checkIsEmpty() {
    const text = document.activeElement.value;
    const errorElement = document.activeElement.nextSibling;
    if (text === "") {
      let child = errorElement.firstChild;
      if (!child) {
        let emailError = document.createTextNode(
          "The field must not be empty!"
        );
        errorElement.appendChild(emailError);
      }
    } else {
      let child = errorElement.firstChild;
      if (child) {
        errorElement.removeChild(child);
      }
    }
  }

  return (
    <>
      <Head>
        <title>Mailer</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/images/titleImage.jpg" />
      </Head>
      <div className={styles.container}>
        <h1>Form for sending messages</h1>
        <section className={styles.formContainer}>
          <div className={styles.formMail}>
            <form id="emailForm" onSubmit={prevent}>
              <div className={styles.formControl}>
                <label htmlFor="SenderEmail">Your e-mail:</label> <br />
                <input
                  type="email"
                  id="SenderEmail"
                  maxLength="40"
                  value="alvah.zulauf@ethereal.email"
                  onChange={checkValidation}
                  disabled
                  required
                />
                <p className={styles.error}></p>
              </div>
              <div className={styles.formControl}>
                <label htmlFor="SendFor">Enter recipient&rsquo;s e-mail:</label>{" "}
                <br />
                <input
                  type="email"
                  id="SendFor"
                  maxLength="40"
                  placeholder="Recipient's email address here..."
                  onChange={checkValidation}
                  required
                />
                <p className={styles.error}></p>
              </div>
              <div className={styles.formControlText}>
                <label htmlFor="Messuage">Enter messuage:</label> <br />
                <textarea
                  form="emailForm"
                  placeholder="Text of the messuage here..."
                  onChange={checkIsEmpty}
                  id="Messuage"
                  required
                ></textarea>
                <p className={styles.error}></p>
              </div>
              <div className={styles.buttonContainer}>
                <div className={styles.buttonWrap}>
                  <button type="submit" id="sendButton">
                    Send
                  </button>
                </div>
                <div id="spiner" className={styles.spinerWrap}>
                  <Spiner></Spiner>
                </div>
              </div>
            </form>
          </div>
          <div className={styles.imgBackground}></div>
        </section>
      </div>
    </>
  );
}
