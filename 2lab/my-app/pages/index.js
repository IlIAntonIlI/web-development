import Head from "next/head";
import styles from "../styles/Home.module.scss";
import Spiner from "../components/spiner/spiner";
import Alert from "../components/alert/alert";
import { useState } from "react";

export default function Home() {
  const [visibilityOfSpiner, setVisibility] = useState(false);
  const [disabledButton, setDisabledButoon] = useState("");
  const [errorEmail, setErrorEmail] = useState("");
  const [errorText, setErrorText] = useState("");
  const [visibilityOfAlert, setVisibilityAlert] = useState(false);
  const [textOfAlert, setTextAlert] = useState("");
  const [colorOfAlert, setColorAlert] = useState("");
  function prevent(event) {
    event.preventDefault();
    checkInfo(event);
  }

  function checkInfo(event) {
    const fisrtEmail = event.target.elements.senderEmail.value;
    const secondEmail = event.target.elements.sendFor.value;
    const messuage = event.target.elements.messuage.value;
    setDisabledButoon(!"");
    if (
      validateEmail(fisrtEmail) &&
      validateEmail(secondEmail) &&
      messuage !== ""
    ) {
      setVisibility(true);
      const bodyToSend = {
        from: fisrtEmail,
        where: secondEmail,
        letter: messuage,
      };

      fetch("/api/server", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(bodyToSend),
      })
        .then((resp) => {
          return resp.json();
        })
        .then((data) => {
          if (data.sended) {
            setVisibilityAlert(true);
            setTextAlert(data.messuage);
            setColorAlert("green");
            return;
          }
          if (!data.sended) {
            setVisibilityAlert(true);
            setTextAlert(data.error);
            setColorAlert("red");
            return;
          }
        })
        .catch((e) => {
          setTextAlert("Error while sending");
          setColorAlert("red");
          return;
        });
    } else {
      setVisibilityAlert(true);
      setTextAlert("Enter correct information and fill all fields of form!");
      setColorAlert("red");
    }
  }

  function checkValidation(event) {
    const email = event.target.value;
    if (email === "") {
      setErrorEmail("The field must be not empty!");
      if (!event.target.classList.contains(styles.redBorder)) {
        event.target.classList.add(styles.redBorder);
      }
      return;
    }
    if (validateEmail(email)) {
      setErrorEmail("");
      if (event.target.classList.contains(styles.redBorder)) {
        event.target.classList.remove(styles.redBorder);
      }
      return;
    }
    setErrorEmail("The text you entered is not an email address!");
    if (!event.target.classList.contains(styles.redBorder)) {
      event.target.classList.add(styles.redBorder);
    }
  }

  function validateEmail(email) {
    const re =
      /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(email);
  }

  function checkIsEmpty(event) {
    const text = event.target.value;
    if (text === "") {
      setErrorText("The field must be not empty!");
      if (!event.target.classList.contains(styles.redBorder)) {
        event.target.classList.add(styles.redBorder);
      }
      return;
    }
    setErrorText("");
    if (event.target.classList.contains(styles.redBorder)) {
      event.target.classList.remove(styles.redBorder);
    }
  }

  const closeFunction = function () {
    setVisibilityAlert(false);
    setDisabledButoon("");
    setVisibility(false);
  };

  return (
    <>
      <Head>
        <title>Mailer</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/images/titleImage.jpg" />
      </Head>
      <div className={styles.container}>
        <Alert
          visibility={visibilityOfAlert}
          text={textOfAlert}
          color={colorOfAlert}
          close={closeFunction}
        />
        <h1>Form for sending messages</h1>
        <section className={styles.formContainer}>
          <div className={styles.formMail}>
            <form id="emailForm" onSubmit={prevent}>
              <div className={styles.formControl}>
                <label htmlFor="SenderEmail">Your e-mail:</label> <br />
                <input
                  type="email"
                  id="senderEmail"
                  maxLength="40"
                  value="alvah.zulauf@ethereal.email"
                  disabled
                  required
                />
                <p className={styles.error}></p>
              </div>
              <div className={styles.formControl}>
                <label htmlFor="SendFor">Enter recipient&rsquo;s e-mail:</label>{" "}
                <br />
                <input
                  type="email"
                  id="sendFor"
                  maxLength="40"
                  placeholder="Recipient's email address here..."
                  onChange={checkValidation}
                  required
                />
                <p className={styles.error}>{errorEmail}</p>
              </div>
              <div className={styles.formControlText}>
                <label htmlFor="Messuage">Enter messuage:</label> <br />
                <textarea
                  form="emailForm"
                  placeholder="Text of the messuage here..."
                  onChange={checkIsEmpty}
                  id="messuage"
                  required
                ></textarea>
                <p className={styles.error}>{errorText}</p>
              </div>
              <div className={styles.buttonContainer}>
                <div className={styles.buttonWrap}>
                  <button
                    type="submit"
                    id="sendButton"
                    disabled={disabledButton}
                  >
                    Send
                  </button>
                </div>
                <div className={styles.spinnerWrap}>
                  <Spiner visibility={visibilityOfSpiner} />
                </div>
              </div>
            </form>
          </div>
          <div className={styles.imgBackground}></div>
        </section>
      </div>
    </>
  );
}
